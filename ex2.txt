COSTFUNCTION:
hypothesis = sigmoid(X*theta);
cost = - y.*log(hypothesis) - (1-y).*log(1-hypothesis);
J = 1/(m)*sum(cost);

gradcost = (hypothesis - y).*X;
grad = 1/ (m)*sum(gradcost);

-------------
COSTFUNCTIONREG:

hypothesis = sigmoid(X*theta);
cost = - y.*log(hypothesis) - (1-y).*log(1-hypothesis);
CRTerm = lambda/(2*m) * sum( theta(2:end).^2 );
J = (1/(m)*sum(cost)) +CRTerm;

for i = 1:m
	gradient = gradient + ( hypothesis(i) - y(i) ) * X(i, :)';
end
gradientRegularizationTerm = lambda/m * [0; theta(2:end)]; 
grad = (1/m) * gradient + gradientRegularizationTerm;

--------------
SIGMOID:
g = 1 ./(1 + e.^(-z))

-------------------
PREDICT:
p = sigmoid(X*theta) >= 0.5;